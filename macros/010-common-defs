%system_python python2

##### fedora compatibility #####

%py_setup setup.py
%py_shbang_opts -s

##### binary suffixes for flavors #####

%python2_bin_suffix %python2_version
%python3_bin_suffix %python3_version
%pypy3_bin_suffix   pp%{pypy3_version}

##### naming unification templates #####

#%python_sitelib_tmpl()         %(%1 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
#%python_sitearch_tmpl()        %(%1 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1))")
#%python_version_tmpl()         %(%1 -c "import sys; sys.stdout.write('{0.major}.{0.minor}'.format(sys.version_info))")
#%python_version_nodots_tmpl()  %(%1 -c "import sys; sys.stdout.write('{0.major}{0.minor}'.format(sys.version_info))")

%python_build_tmpl(i:o:)    %{expand:%%__%{-i*}} %{py_setup} %{?py_setup_args} build \\\
    --executable="%{expand:%%__%{-i*} %%{?%{-i*}_shbang_opts}}"
%python_install_tmpl(i:o:)  %{expand:%%__%{-i*}} %{py_setup} %{?py_setup_args} install \\\
    -O1 --skip-build --root %{buildroot} --prefix %{_prefix}

##### alternative handling #####

#%python_alternative_tmpl(b:f:) \
#%define _py_binary %{-b*} \
#%define _py_suffix %{expand:%%%{-f*}_bin_suffix} \
#%{_bindir}/%{_py_binary} \
#%{_bindir}/%{_py_binary}-%{_py_suffix} \
#%ghost %{_sysconfdir}/alternatives/%{_py_binary} \
#%{nil}
#
#%python_install_alternative_tmpl(b:f:) \
#%define _py_binary %{-b*} \
#%define _py_suffix %{expand:%%%{-f*}_bin_suffix} \
#%define _py_prio   %{expand:%%%{-f*}_version_nodots} \
#%install_alternative -n %{_py_binary} -t %{_bindir}/%{_py_binary}-%{_py_suffix} -p %{_py_prio}
#
#%python_uninstall_alternative_tmpl(b:f:) \
#%define _py_binary %{-b*} \
#%define _py_suffix %{expand:%%%{-f*}_bin_suffix} \
#%uninstall_alternative -n %{_py_binary} -t %{_bindir}/%{_py_binary}-%{_py_suffix}

##### fallback preferred configuration #####

# This can't be in a conditional section because there are no conditional
# sections. Instead, `python2` is hardcoded here, to be reconfigured through
# future package updates (supposedly).

%python_sitelib          %python2_sitelib
%python_sitearch         %python2_sitearch
%python_version          %python2_version
%python_version_nodots   %python2_version_nodots

# I am honestly not quite sure how the following works. By all logic it should not.
# I suppose that the macro body is copied here and applied on the `%1`?
%python_alternative()           %{expand:%python2_alternative}
%python_install_alternative()   %{expand:%python2_install_alternative}
%python_uninstall_alternative() %{expand:%python2_uninstall_alternative}

%py_ver  %python_version
