# order is important! if builds install the same binary, the last one is preferred
%pythons %{?have_python2:python2} %{?have_pypy3:pypy3} %{?have_python3:python3}

# TODO for now the requirement is on "python-" not "python2-" because aliases in python do not exist
%_python2_package_prefix %{?python2_package_prefix}%{?!python2_package_prefix:python}
%python_module() %{expand: %{?have_python2:%{_python2_package_prefix}-%1} %{?have_python3:python3-%1} %{?have_pypy3:pypy3-%1}}

%if_python_kind() %if %{_python_scan_spec} %{lua: if current_flavor == rpm.expand("%1") then print("1") else print("0") end}
%if_not_python_kind() %if %{_python_scan_spec} %{lua: if current_flavor == rpm.expand("%1") then print("0") else print("1") end}

%ifpython3 %{if_python_kind python3}
%ifpython2 %{if_python_kind python2}
%ifpypy3 %{if_python_kind pypy3}
%ifpycache %{if_not_python_kind python2}

%python3_only() %ifpython3 \
%** \
%endif

%python2_only() %ifpython2 \
%** \
%endif

%pypy3_only() %ifpypy3 \
%** \
%endif

%pycache_only() %ifpycache \
%** \
%endif

%_python_use_flavor() \
python_flavor=`[ -f _current_flavor ] && cat _current_flavor || true` \
if [ -z "$python_flavor" ]; then python_flavor="tmp"; fi \
if [ "$python_flavor" != "%1" ]; then \
    if [ -d build ]; then mv build _build.$python_flavor; fi \
    if [ -d _build.%1 ]; then mv _build.%1 build; fi \
fi \
echo %1 > _current_flavor \
%{nil}

%_python_stash_flavor() \
if [ -d build ]; then mv build _build.%1; fi \
if [ -d _build.tmp ]; then mv _build.tmp build; fi \
%{nil}


### LUA-MACROS ###


%python_subpackages \
%{_python_scan_spec} \
%{_python_emit_subpackages}
